qual.pal <- brewer.pal.info[brewer.pal.info$category=='qual',]
col <- unlist(mapply(brewer.pal, qual.pal$maxcolors, rownames(qual.pal)))
col <- col[1:dim(unique(Pathway))[1]]
names(col) <- unique(Pathway$Pathway)
col.p <- colorRampPalette(colors=c('white', 'orchid2'), space='Lab')(dim(p)[1])
names(col.p) <- rownames(y)
annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'),
p.adjusted=col.p)
# Visualize plot
p2 <- pheatmap(y, scale='none', show_rownames=F, show_colnames=F,
cluster_rows=F, clustering_distance_rows='manhattan',
cluster_cols=F, annotation_row=annot.row, annotation_col=Cluster,
color=col.pal, annotation_colors=annot.pal, border_color='gray',
cellwidth=2, cellheight=2, gaps_col=match(2, Cluster$Cluster)-1,
main='Flux through metabolic reactions', treeheight_row = 0)
p2
# Save plot (if prompted)
if (save.plot) {
tiff('results/R_plots/popFBA_flux_heatmap.tiff', units='in',
width=9, height=9, res=300)
print({
p2
})
dev.off()
}
p2
save.plot <- T
# Re-organize data
x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
arrange(padj) %>% filter(padj < 0.001) %>% arrange(subSystem)
y <- x %>% select(-c(rxn, rxnName, subSystem, pval, padj)) %>%
t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
rownames(y) <- x$rxn %>% make.unique(.)
ncell <- ncol(y)/2
# Define metadata
Pathway <- data.frame(Pathway=x$subSystem, row.names=rownames(y))
Cluster <- data.frame(Cluster=as.character(rep(c(1, 2), each=ncell)),
row.names=colnames(y))
annot.row <- data.frame(Pathway=x$subSystem, p.adjusted=-log10(x$padj),
row.names=rownames(y))
p <- data.frame(p=-log10(x$padj), row.names=rownames(y))
# Use RedBlue color palette
col.neg <- colorRampPalette(colors=c('royalblue3', 'white'),
space='Lab')(abs(round(100*min(y))))
col.pos <- colorRampPalette(colors=c('white', 'red4'),
space='Lab')(abs(round(100*max(y))))
col.pal <- c(col.neg, col.pos)
# Use custom annotation palette
qual.pal <- brewer.pal.info[brewer.pal.info$category=='qual',]
col <- unlist(mapply(brewer.pal, qual.pal$maxcolors, rownames(qual.pal)))
col <- col[1:dim(unique(Pathway))[1]]
names(col) <- unique(Pathway$Pathway)
col.p <- colorRampPalette(colors=c('white', 'orchid2'), space='Lab')(dim(p)[1])
names(col.p) <- rownames(y)
annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'),
p.adjusted=col.p)
# Visualize plot
p2 <- pheatmap(y, scale='none', show_rownames=F, show_colnames=F,
cluster_rows=F, clustering_distance_rows='manhattan',
cluster_cols=F, annotation_row=annot.row, annotation_col=Cluster,
color=col.pal, annotation_colors=annot.pal, border_color='gray',
cellwidth=2, cellheight=2, gaps_col=match(2, Cluster$Cluster)-1,
main='Flux through metabolic reactions', treeheight_row = 0)
p2
# Save plot (if prompted)
if (save.plot) {
tiff('results/R_plots/popFBA_flux_heatmap.tiff', units='in',
width=9, height=9, res=300)
print({
p2
})
dev.off()
}
# Re-organize data
x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
arrange(padj) %>% filter(padj < 0.001) %>% arrange(subSystem)
y <- x %>% select(-c(rxn, rxnName, subSystem, pval, padj)) %>%
t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
rownames(y) <- x$rxn %>% make.unique(.)
ncell <- ncol(y)/2
# Define metadata
Pathway <- data.frame(Pathway=x$subSystem, row.names=rownames(y))
Cluster <- data.frame(Cluster=as.character(rep(c(1, 2), each=ncell)),
row.names=colnames(y))
annot.row <- data.frame(Pathway=x$subSystem, p.adjusted=-log10(x$padj),
row.names=rownames(y))
p <- data.frame(p=-log10(x$padj), row.names=rownames(y))
# Use RedBlue color palette
col.neg <- colorRampPalette(colors=c('royalblue3', 'white'),
space='Lab')(abs(round(100*min(y))))
col.pos <- colorRampPalette(colors=c('white', 'red4'),
space='Lab')(abs(round(100*max(y))))
col.pal <- c(col.neg, col.pos)
# Use custom annotation palette
qual.pal <- brewer.pal.info[brewer.pal.info$category=='qual',]
col <- unlist(mapply(brewer.pal, qual.pal$maxcolors, rownames(qual.pal)))
col <- col[1:dim(unique(Pathway))[1]]
names(col) <- unique(Pathway$Pathway)
col.p <- colorRampPalette(colors=c('white', 'orchid2'), space='Lab')(dim(p)[1])
names(col.p) <- rownames(y)
annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'),
p.adjusted=col.p)
# Visualize plot
p2 <- pheatmap(y, scale='none', show_rownames=F, show_colnames=F,
cluster_rows=F, clustering_distance_rows='manhattan',
cluster_cols=F, annotation_row=annot.row, annotation_col=Cluster,
color=col.pal, annotation_colors=annot.pal, border_color='gray',
cellwidth=2, cellheight=2, gaps_col=match(2, Cluster$Cluster)-1,
main='Flux through metabolic reactions', treeheight_row = 0)
p2
# Save plot (if prompted)
if (save.plot) {
tiff('results/R_plots/popFBA_flux_heatmap.tiff', units='in',
width=8, height=8, res=300)
print({
p2
})
dev.off()
}
x <- dataset$EC$popFBA$pred %>%
mutate(padj=p.adjust(pval, method='BH')) %>% filter(padj < 0.05)
y <- x %>% select(-c(Pair, pval, padj))
rownames(y) <- x$Pair
ncell <- ncol(y)/2
x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
arrange(padj) %>% filter(padj < 0.001) %>% arrange(subSystem)
y <- x %>% select(-c(rxn, rxnName, subSystem, pval, padj)) %>%
t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
rownames(y) <- x$rxn %>% make.unique(.)
ncell <- ncol(y)/2
# Define packages to install
pkg.list = c('svDialogs', 'dplyr', 'readxl', 'RColorBrewer', 'pheatmap')
# Define packages not already installed
pkg.install <- pkg.list[!(pkg.list %in% installed.packages()[, 'Package'])]
# Install pheatmap from GitHub
if ('pheatmap' %in% pkg.install) {
if (!require('devtools')) {
install.packages('devtools', dependencies=T)
library(devtools)
}
install_github('raivokolde/pheatmap')
pkg.install <- pkg.install[!(pkg.install %in% 'pheatmap')]
}
# Install other uninstalled packages
if (length(pkg.install) > 0) {
install.packages(pkg.install)
}
library(svDialogs)    # for user-defined inputs
library(dplyr)        # for pipe-based processing
library(readxl)       # for reading Excel files
library(RColorBrewer) # for custom color palettes
library(pheatmap)     # for generating heatmaps
# Color palette
col <- c(brewer.pal(9, 'Set1'), brewer.pal(3, 'Accent'))
# Save plots?
save.plot <- dlgInput('Save heatmaps? (T/F)', Sys.info()['F'])$res %>%
as.logical(.)
# Create dataset variable
dataset <- list()
# EC (Biolog)
dataset$EC$bio <- read_excel('results/plot_data.xlsx', sheet='ecoli_biolog')
# EC (predictions)
dataset$EC$pred <- read_excel('results/plot_data.xlsx', sheet='pred2_heatmap')
dataset$EC$pred3 <- read_excel('results/plot_data.xlsx', sheet='pred3_heatmap')
dataset$EC$predp <- read_excel('results/plot_data.xlsx', sheet='popFBA_heatmap')
# popFBA (fluxes)
# dataset$EC$fluxp <- read_excel('results/plot_data.xlsx', sheet='popFBA_flux')
dataset$EC$popFBA$pred <- read_excel('results/plot_data.xlsx', sheet='popFBA_pred_heatmap2')
dataset$EC$popFBA$flux <- read_excel('results/plot_data.xlsx', sheet='popFBA_flux_heatmap2')
# Re-organize data
# x <- dataset$EC$popFBA$pred %>%
#   mutate(padj=p.adjust(pval, method='BH')) %>% filter(padj < 0.05)
# y <- x %>% select(-c(Pair, pval, padj))
x <- dataset$EC$popFBA$pred
y <- x %>% select(-Pair)
rownames(y) <- x$Pair
ncell <- ncol(y)/2
# Use RedBlue color palette (asymmetric)
nScale <- 1000
n <- round(nScale*(max(y) - min(y)))
x <- n + round(nScale*min(y))
col.neg <- colorRampPalette(colors=c('royalblue3', 'white'),
space='Lab')(abs(round(nScale*min(y))))
col.pos <- colorRampPalette(colors=c('white', 'red4'),
space='Lab')(abs(round(nScale*max(y))))
col.pal <- c(col.neg, col.pos)
# Annotations
Cluster <- data.frame(Cluster=as.character(rep(c(1, 2), each=ncell)),
row.names=colnames(y))
annot.pal <- list(Cluster=c('1'='goldenrod', '2'='darkgreen'))
# Visualize plot
p2 <- pheatmap(y, cluster_rows=F, cluster_cols=F, gaps_col=c(ncell),
clustering_distance_rows='manhattan', color=col.pal,
legend_breaks=c(min(y)+0.01, 0, max(y)-0.01), border_color=NA,
annotation_col=Cluster, annotation_colors=annot.pal,
legend_labels=c('Synergy','Neutral','Antagonism'),
show_rownames=F, show_colnames=F, cellheight=2, cellwidth=2,
main='Predicted interaction scores')
p2
# Save plot (if prompted)
if (save.plot) {
tiff('results/R_plots/popFBA_pred_heatmap2.tiff', units='in',
width=5, height=2, res=300)
print({
p2
})
dev.off()
}
# Re-organize data
# x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
#   arrange(padj) %>% filter(padj < 0.001) %>% arrange(subSystem)
# y <- x %>% select(-c(rxn, rxnName, subSystem, pval, padj)) %>%
#   t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
amino_acids <- c('Alanine', 'Arginine', 'Asparagine', 'Aspartate', 'Cysteine',
'Glutamine', 'Glutamate', 'Glycine', 'Histidine', 'Isoleucine',
'Leucine', 'Lysine', 'Methionine', 'Phenylalanine', 'Proline',
'Serine', 'Threonine', 'Tryptophan', 'Tyrosine', 'Valine')
x <- dataset$EC$popFBA$flux %>%
mutate(Pathway=if_else(grepl(paste0(amino_acids, collapse='|'), subSystem),
'Amino Acid Metabolism', subSystem)) %>%
arrange(Pathway)
y <- x %>% select(-c(rxn, rxnName, subSystem, Pathway)) %>%
t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
rownames(y) <- x$rxn %>% make.unique(.)
ncell <- ncol(y)/2
# Define metadata
Pathway <- data.frame(Pathway=x$Pathway, row.names=rownames(y))
Cluster <- data.frame(Cluster=as.character(rep(c(1, 2), each=ncell)),
row.names=colnames(y))
# annot.row <- data.frame(Pathway=x$subSystem, p.adjusted=-log10(x$padj),
#                         row.names=rownames(y))
# p <- data.frame(p=-log10(x$padj), row.names=rownames(y))
# Use RedBlue color palette
col.neg <- colorRampPalette(colors=c('royalblue3', 'white'),
space='Lab')(abs(round(100*min(y))))
col.pos <- colorRampPalette(colors=c('white', 'red4'),
space='Lab')(abs(round(100*max(y))))
col.pal <- c(col.neg, col.pos)
# Use custom annotation palette
qual.pal <- brewer.pal.info[brewer.pal.info$category=='qual',]
col <- unlist(mapply(brewer.pal, qual.pal$maxcolors, rownames(qual.pal)))
col <- col[1:dim(unique(Pathway))[1]]
names(col) <- unique(Pathway$Pathway)
# col.p <- colorRampPalette(colors=c('white', 'orchid2'), space='Lab')(dim(p)[1])
# names(col.p) <- rownames(y)
# annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'),
#                   p.adjusted=col.p)
annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'))
# Visualize plot
p2 <- pheatmap(y, scale='none', show_rownames=F, show_colnames=F,
cluster_rows=F, labels_row=x$Pathway,
cluster_cols=F, annotation_row=Pathway, annotation_col=Cluster,
color=col.pal, annotation_colors=annot.pal, border_color='gray',
cellwidth=2, cellheight=2, gaps_col=match(2, Cluster$Cluster)-1,
main='Flux through metabolic reactions', treeheight_row=0)
p2
# Save plot (if prompted)
if (save.plot) {
tiff('results/R_plots/popFBA_flux_heatmap2.tiff', units='in',
width=8, height=6, res=300)
print({
p2
})
dev.off()
}
p2
pheatmap(y, scale='none', show_rownames=F, show_colnames=F,
cluster_rows=F, labels_row=x$Pathway,
cluster_cols=F, annotation_row=Pathway, annotation_col=Cluster,
color=col.pal, annotation_colors=annot.pal, border_color='gray',
cellwidth=7, cellheight=7, gaps_col=match(2, Cluster$Cluster)-1,
main='Flux through metabolic reactions', treeheight_row=0)
View(dataset$EC$popFBA$flux)
size(dataset$EC$popFBA$flux)
dim(dataset$EC$popFBA$flux)
# Create dataset variable
dataset <- list()
# EC (Biolog)
dataset$EC$bio <- read_excel('results/plot_data.xlsx', sheet='ecoli_biolog')
# EC (predictions)
dataset$EC$pred <- read_excel('results/plot_data.xlsx', sheet='pred2_heatmap')
dataset$EC$pred3 <- read_excel('results/plot_data.xlsx', sheet='pred3_heatmap')
dataset$EC$predp <- read_excel('results/plot_data.xlsx', sheet='popFBA_heatmap')
# popFBA (fluxes)
# dataset$EC$fluxp <- read_excel('results/plot_data.xlsx', sheet='popFBA_flux')
dataset$EC$popFBA$pred <- read_excel('results/plot_data.xlsx', sheet='popFBA_pred_heatmap')
dataset$EC$popFBA$flux <- read_excel('results/plot_data.xlsx', sheet='popFBA_flux_heatmap')
# Re-organize data
# x <- dataset$EC$popFBA$pred %>%
#   mutate(padj=p.adjust(pval, method='BH')) %>% filter(padj < 0.05)
# y <- x %>% select(-c(Pair, pval, padj))
x <- dataset$EC$popFBA$pred
y <- x %>% select(-Pair)
rownames(y) <- x$Pair
ncell <- ncol(y)/2
# Use RedBlue color palette (asymmetric)
nScale <- 1000
n <- round(nScale*(max(y) - min(y)))
x <- n + round(nScale*min(y))
col.neg <- colorRampPalette(colors=c('royalblue3', 'white'),
space='Lab')(abs(round(nScale*min(y))))
col.pos <- colorRampPalette(colors=c('white', 'red4'),
space='Lab')(abs(round(nScale*max(y))))
col.pal <- c(col.neg, col.pos)
# Annotations
Cluster <- data.frame(Cluster=as.character(rep(c(1, 2), each=ncell)),
row.names=colnames(y))
View(dataset$EC$popFBA$pred)
sim(dataset$EC$popFBA$pred)
dim(dataset$EC$popFBA$pred)
# Re-organize data
x <- dataset$EC$popFBA$pred %>%
mutate(padj=p.adjust(pval, method='BH')) %>% filter(padj < 0.05)
y <- x %>% select(-c(Pair, pval, padj))
# x <- dataset$EC$popFBA$pred
# y <- x %>% select(-Pair)
rownames(y) <- x$Pair
ncell <- ncol(y)/2
# Use RedBlue color palette (asymmetric)
nScale <- 1000
n <- round(nScale*(max(y) - min(y)))
x <- n + round(nScale*min(y))
col.neg <- colorRampPalette(colors=c('royalblue3', 'white'),
space='Lab')(abs(round(nScale*min(y))))
col.pos <- colorRampPalette(colors=c('white', 'red4'),
space='Lab')(abs(round(nScale*max(y))))
col.pal <- c(col.neg, col.pos)
# Annotations
Cluster <- data.frame(Cluster=as.character(rep(c(1, 2), each=ncell)),
row.names=colnames(y))
annot.pal <- list(Cluster=c('1'='goldenrod', '2'='darkgreen'))
# Visualize plot
p2 <- pheatmap(y, cluster_rows=F, cluster_cols=F, gaps_col=c(ncell),
clustering_distance_rows='manhattan', color=col.pal,
legend_breaks=c(min(y)+0.01, 0, max(y)-0.01), border_color=NA,
annotation_col=Cluster, annotation_colors=annot.pal,
legend_labels=c('Synergy','Neutral','Antagonism'),
show_rownames=F, show_colnames=F, cellheight=2, cellwidth=2,
main='Predicted interaction scores')
p2
# Save plot (if prompted)
if (save.plot) {
tiff('results/R_plots/popFBA_pred_heatmap2.tiff', units='in',
width=5, height=2, res=300)
print({
p2
})
dev.off()
}
dim(dataset$EC$popFBA$flux)
x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
arrange(padj) %>% filter(padj < 0.001) %>% arrange(subSystem)
y <- x %>% select(-c(rxn, rxnName, subSystem, pval, padj)) %>%
t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
dim(y)
x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
arrange(padj) %>% filter(padj < 0.05) %>% arrange(subSystem)
y <- x %>% select(-c(rxn, rxnName, subSystem, pval, padj)) %>%
t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
dim(y)
x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
arrange(padj) %>% select(rxn, rxnName, subSystem, pval, padj, everything())
View(x)
x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
arrange(padj) %>% filter(pval < 0.05) %>% arrange(subSystem)
y <- x %>% select(-c(rxn, rxnName, subSystem, pval, padj)) %>%
t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
rownames(y) <- x$rxn %>% make.unique(.)
ncell <- ncol(y)/2
# Define metadata
Pathway <- data.frame(Pathway=x$Pathway, row.names=rownames(y))
Cluster <- data.frame(Cluster=as.character(rep(c(1, 2), each=ncell)),
row.names=colnames(y))
# annot.row <- data.frame(Pathway=x$subSystem, p.adjusted=-log10(x$padj),
#                         row.names=rownames(y))
# p <- data.frame(p=-log10(x$padj), row.names=rownames(y))
# Use RedBlue color palette
col.neg <- colorRampPalette(colors=c('royalblue3', 'white'),
space='Lab')(abs(round(100*min(y))))
col.pos <- colorRampPalette(colors=c('white', 'red4'),
space='Lab')(abs(round(100*max(y))))
col.pal <- c(col.neg, col.pos)
# Use custom annotation palette
qual.pal <- brewer.pal.info[brewer.pal.info$category=='qual',]
col <- unlist(mapply(brewer.pal, qual.pal$maxcolors, rownames(qual.pal)))
col <- col[1:dim(unique(Pathway))[1]]
names(col) <- unique(Pathway$Pathway)
# col.p <- colorRampPalette(colors=c('white', 'orchid2'), space='Lab')(dim(p)[1])
# names(col.p) <- rownames(y)
# annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'),
#                   p.adjusted=col.p)
annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'))
# Visualize plot
p2 <- pheatmap(y, scale='none', show_rownames=F, show_colnames=F,
cluster_rows=F, labels_row=x$Pathway,
cluster_cols=F, annotation_row=Pathway, annotation_col=Cluster,
color=col.pal, annotation_colors=annot.pal, border_color='gray',
cellwidth=7, cellheight=7, gaps_col=match(2, Cluster$Cluster)-1,
main='Flux through metabolic reactions', treeheight_row=0)
p2
# Create dataset variable
dataset <- list()
# EC (Biolog)
dataset$EC$bio <- read_excel('results/plot_data.xlsx', sheet='ecoli_biolog')
# EC (predictions)
dataset$EC$pred <- read_excel('results/plot_data.xlsx', sheet='pred2_heatmap')
dataset$EC$pred3 <- read_excel('results/plot_data.xlsx', sheet='pred3_heatmap')
dataset$EC$predp <- read_excel('results/plot_data.xlsx', sheet='popFBA_heatmap')
# popFBA (fluxes)
# dataset$EC$fluxp <- read_excel('results/plot_data.xlsx', sheet='popFBA_flux')
dataset$EC$popFBA$pred <- read_excel('results/plot_data.xlsx', sheet='popFBA_pred_heatmap')
dataset$EC$popFBA$flux <- read_excel('results/plot_data.xlsx', sheet='popFBA_flux_heatmap')
View(dataset$EC$popFBA$flux)
x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
arrange(padj) %>% filter(pval < 0.05) %>% arrange(subSystem)
y <- x %>% select(-c(rxn, rxnName, subSystem, pval, padj)) %>%
t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
View(y)
View(x)
x <- dataset$EC$popFBA$flux %>% mutate(padj=p.adjust(pval, method='BH')) %>%
mutate(Pathway=subSystem) %>% arrange(padj) %>% filter(pval < 0.05) %>% arrange(subSystem)
y <- x %>% select(-c(rxn, rxnName, subSystem, Pathway, pval, padj)) %>%
t(.) %>% scale(.) %>% t(.) %>% as.data.frame()
rownames(y) <- x$rxn %>% make.unique(.)
ncell <- ncol(y)/2
# Define metadata
Pathway <- data.frame(Pathway=x$Pathway, row.names=rownames(y))
Cluster <- data.frame(Cluster=as.character(rep(c(1, 2), each=ncell)),
row.names=colnames(y))
# annot.row <- data.frame(Pathway=x$subSystem, p.adjusted=-log10(x$padj),
#                         row.names=rownames(y))
# p <- data.frame(p=-log10(x$padj), row.names=rownames(y))
# Use RedBlue color palette
col.neg <- colorRampPalette(colors=c('royalblue3', 'white'),
space='Lab')(abs(round(100*min(y))))
col.pos <- colorRampPalette(colors=c('white', 'red4'),
space='Lab')(abs(round(100*max(y))))
col.pal <- c(col.neg, col.pos)
# Use custom annotation palette
qual.pal <- brewer.pal.info[brewer.pal.info$category=='qual',]
col <- unlist(mapply(brewer.pal, qual.pal$maxcolors, rownames(qual.pal)))
col <- col[1:dim(unique(Pathway))[1]]
names(col) <- unique(Pathway$Pathway)
# col.p <- colorRampPalette(colors=c('white', 'orchid2'), space='Lab')(dim(p)[1])
# names(col.p) <- rownames(y)
# annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'),
#                   p.adjusted=col.p)
annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'))
# Visualize plot
p2 <- pheatmap(y, scale='none', show_rownames=F, show_colnames=F,
cluster_rows=F, labels_row=x$Pathway,
cluster_cols=F, annotation_row=Pathway, annotation_col=Cluster,
color=col.pal, annotation_colors=annot.pal, border_color='gray',
cellwidth=7, cellheight=7, gaps_col=match(2, Cluster$Cluster)-1,
main='Flux through metabolic reactions', treeheight_row=0)
p2
# Re-organize data
x <- dataset$EC$fluxp %>% select(rxn, subSystem, colnames(y))
# Create dataset variable
dataset <- list()
# EC (Biolog)
dataset$EC$bio <- read_excel('results/plot_data.xlsx', sheet='ecoli_biolog')
# EC (predictions)
dataset$EC$pred <- read_excel('results/plot_data.xlsx', sheet='pred2_heatmap')
dataset$EC$pred3 <- read_excel('results/plot_data.xlsx', sheet='pred3_heatmap')
dataset$EC$predp <- read_excel('results/plot_data.xlsx', sheet='popFBA_heatmap')
# popFBA (fluxes)
dataset$EC$fluxp <- read_excel('results/plot_data.xlsx', sheet='popFBA_flux')
dataset$EC$popFBA$pred <- read_excel('results/plot_data.xlsx', sheet='popFBA_pred_heatmap')
dataset$EC$popFBA$flux <- read_excel('results/plot_data.xlsx', sheet='popFBA_flux_heatmap')
# Re-organize data
x <- dataset$EC$fluxp %>% select(rxn, subSystem, colnames(y))
# y <- x[-1, -c(1, 2)]
y <- x[-1, -c(1, 2)] %>% t(.) %>% scale(.) %>% t(.) %>%
as.data.frame(., row.names=make.unique(x$rxn[-1])) %>%
arrange()
# y[y > 2] <- 2; y[y < -2] <- -2
rownames(y) <- x$rxn[-1] %>% make.unique(.)
colnames(y) <- colnames(x)[-c(1, 2)]
# Define metadata
Pathway <- data.frame(Pathway=x$subSystem[-1], row.names=rownames(y))
Cluster <- data.frame(Cluster=as.character(x[1, -c(1, 2)]),
row.names=colnames(y))
# Use RedBlue color palette
col.neg <- colorRampPalette(colors=c('royalblue3', 'white'),
space='Lab')(abs(round(100*min(y))))
col.pos <- colorRampPalette(colors=c('white', 'red4'),
space='Lab')(abs(round(100*max(y))))
col.pal <- c(col.neg, col.pos)
# Use custom annotation palette
col <- rev(brewer.pal(dim(unique(Pathway))[1], 'Set3'))
names(col) <- unique(Pathway$Pathway)
annot.pal <- list(Pathway=col, Cluster=c('1'='goldenrod', '2'='darkgreen'))
# Visualize plot
p2 <- pheatmap(y, scale='none', show_rownames=F, show_colnames=F,
cluster_rows=T, clustering_distance_rows='manhattan',
cluster_cols=F, annotation_row=Pathway, annotation_col=Cluster,
color=col.pal, annotation_colors=annot.pal, borker_color='gray',
cellwidth=2, cellheight=2, gaps_col=match(2, Cluster$Cluster)-1,
main='Flux through metabolic reactions', treeheight_row = 0)
p2
# Save plot (if prompted)
if (save.plot) {
tiff('results/R_plots/popFBA_flux.tiff', units='in',
width=7, height=3, res=300)
print({
p2
})
dev.off()
}
p2
View(x)
